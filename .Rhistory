print(squares)
spring.break <- as.Date("03/17/2018", "%m/%d/%y")
print(spring.break)
spring.break <- as.Date("03/17/18", "%m/%d/%y")
print(spring.break)
today <-Sys.Date()
print(today)
days.to.break <- spring.break - today
print(days.to.break)
MakeBirthdayIntro(name,age,date) {
MakeBirthdayIntro <- function(name,age,date) {
n.days <- date - today
new.age <- age + 1
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)}
MakeBirthdayIntro <- function(name,age,date) {
n.days <- date - today
new.age <- age + 1
if (n.days < 0) {
n.days <- n.days + 365
}
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
MakeBirthdayIntro <- function(name,age,date) {
birth <- as.Date(date, "%m/%d/%y")
n.days <- birth - today
new.age <- age + 1
if (n.days < 0) {
n.days <- n.days + 365
}
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, 01/19/18)
MakeBirthdayIntro <- function(name,age,date) {
birth <- as.Date("date", "%m/%d/%y")
n.days <- birth - today
new.age <- age + 1
if (n.days < 0) {
n.days <- n.days + 365
}
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, 01/19/18)
MakeBirthdayIntro <- function(name,age,date) {
birth <- as.Date("date", "%m/%d/%y")
n.days <- birth - today
new.age <- age + 1
if (n.days <= 0) {
n.days <- n.days + 365
}
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, 01/19/18)
birth <- as.Date("date", "%m/%d/%y")
MakeBirthdayIntro <- function(name,age,birth) {
n.days <- birth - today
new.age <- age + 1
if (n.days <= 0) {
n.days <- n.days + 365
}
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, 01/19/18)
MakeBirthdayIntro <- function(name,age,birth) {
birth <- as.Date("date", "%m/%d/%y")
n.days <- birth - today
new.age <- age + 1
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
MakeBirthdayIntro <- function(name,age,date()) {
birth <- as.Date("date", "%m/%d/%y")
n.days <- birth - today
new.age <- age + 1
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
MakeBirthdayIntro <- function(name,age,birth) {
birth <- as.Date("date", "%m/%d/%y")
n.days <- birth - today
new.age <- age + 1
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
MakeBirthdayIntro <- function(name,age,date) {
birth <- as.Date("date", "%m/%d/%y")
n.days <- birth - today
new.age <- age + 1
if (n.days <= 0) {
n.days <- n.days + 365
}
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, 01/19/18)
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, 01/11/18)
MakeBirthdayIntro <- function(name,age,date) {
birth <- as.Date("date", "%m/%d/%y")
n.days <- birth - today
new.age <- age + 1
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, 01/19/18)
print(my.birth.intro)
print(my.brith.intro)
MakeBirthdayIntro <- function(name,age,date) {
birth <- as.Date("date", "%m/%d/%y")
n.days <- print(birth - today)
new.age <- age + 1
if (n.days <= 0) {
n.days <- n.days + 365
}
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, 01/19/18)
print(my.birth.intro)
MakeBirthdayIntro <- function(name,age,date) {
birth <- as.Date(date, "%m/%d/%y")
n.days <- birth - today
new.age <- age + 1
if (n.days <= 0) {
n.days <- n.days + 365
}
what.age <- paste("In",n.days,"I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, "01/19/18")
print(my.birth.intro)
print(my.brith.intro)
MakeBirthdayIntro <- function(name,age,date) {
birth <- as.Date(date, "%m/%d/%y")
n.days <- birth - today
new.age <- age + 1
if (n.days < 0) {
n.days <- n.days + 365
}
what.age <- paste("In",n.days,"days I'll be",new.age)
birth.intro <- paste(MakeIntroduction(name,age), what.age)
return(birth.intro)
}
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, "01/19/18")
my.bday.intro <- MakeBirthdayIntro(my.name,my.age, "01/19/18")
print(my.bday.intro)
my.brith.intro <- MakeBirthdayIntro(my.name,my.age, "01/11/18")
print(my.brith.intro)
names <- c('Adele Miller', 'Anirudh Subramanyam', 'Zhanna Voloshina', 'Tejveer Rai', 'Bao Dinh', 'Iris Sun')
names <- c('Adele Miller', 'Anirudh Subramanyam', 'Zhanna Voloshina', 'Tejveer Rai', 'Bao Dinh', 'Iris Sun')
math.grades <- (94:100)
math.grades <- (95:100)
spanish.grades <- (89:94)
spanish.grades <- (94:89)
tas <- data.frame(names, math.grades, spanish.grades, stringsAsFactors = FALSE)
View(tas)
print(paste("The TA data frame has"), nrow(tas), "rows and", ncol(tas), "cols:", colnames(tas))
print(paste("The TA data frame has"), nrow(tas), "rows and", ncol(tas), "cols:", colnames(tas)())
ta.sentence <- paste(("The TA data frame has"), nrow(tas), "rows and", ncol(tas), "cols:", colnames(tas))
print(ta.sentence)
colnames(tas)
?paste
ta.sentence <- paste(("The TA data frame has"), nrow(tas), "rows and", ncol(tas), "cols:", colnames(tas),collapse = ",")
print(ta.sentence)
ta.sentence <- paste(("The TA data frame has"), nrow(tas), "rows and", ncol(tas), "cols:", colnames(tas), sep = ",")
> print(ta.sentence)
ta.sentence <- paste(("The TA data frame has"), nrow(tas), "rows and", ncol(tas), "cols:", colnames(tas), sep = ",")
print(ta.sentence)
column.names <- paste(colnames(tas), collapse = ",")
ta.sentence <- paste(("The TA data frame has"), nrow(tas), "rows and", ncol(tas), "cols:", column.names)
print(ta.sentence)
column.names <- paste(colnames(tas), collapse = " ,")
ta.sentence <- paste(("The TA data frame has"), nrow(tas), "rows and", ncol(tas), "cols:", column.names)
print(ta.sentence)
column.names <- paste(colnames(tas), collapse = ", ")
ta.sentence <- paste(("The TA data frame has"), nrow(tas), "rows and", ncol(tas), "cols:", column.names)
print(ta.sentence)
rownames(tas) <- tas$names
print(tas)
tas[[grade.diff]] <- math.grades - spanish.grades
tas$grade.diff <- tas[[math.grades - "spanish.grades"]]
tas$grade.diff <- tas[[math.grades]] - tas[[spanish.grades]]
tas$grades.diff <- tas$math.grades - tas$spanish.grades
print(tas)
tas$grades.diff <- math.grades - spanish.grades
print(tas)
rownames(tas) <- tas$namesprint(tas)
rownames(tas) <- names
print(tas)
pwd
install.packages("httr")
library("httr")
library("httr")
library()
library("dpylr")
library("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
install.packages("dplyr", repos = "http://cran.us.r-project.org")
source("Assignment.R")
library("dplyr")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
source("Assignment.R")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
library("dplyr")
library(dplyr)
libPaths()
.libPaths
.libPaths()
.libPaths(c( "C:\Users\lenovo\AppData\Local\Temp\RtmpwFDOJZ\downloaded_packages", "D:/R-3.4.3/library"))
.libPaths(c( "C:/Users\lenovo\AppData\Local\Temp\RtmpwFDOJZ\downloaded_packages", "D:/R-3.4.3/library"))
library(dplyr)
.libPaths(c( "C:/Users/lenovo/AppData/Local/Temp/RtmpwFDOJZ/downloaded_packages", "D:/R-3.4.3/library"))
library(dplyr)
.libPaths(c( "D:\R-3.4.3\library\file31dc4033381b\dplyr", "D:/R-3.4.3/library"))
library(dplyr)
.libPaths( c( .libPaths(), "~/userLibrary") )
library(dplyr)
.libPaths( c( .libPaths(), "D:\R-3.4.3\library\file31dc4033381b\dplyr") )
library(dplyr)
.libPaths( c( .libPaths(), "D:/R-3.4.3/library/file31dc4033381b/dplyr") )
library(dplyr)
find.package("dplyr")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
library("dplyr")
source("Assignment.R")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
source("Assignment.R")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
source("Assignment.R")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
source("Assignment.R")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
install.packages("dplyr", repos = "http://cran.us.r-project.org")
source("Assignment.R")
# .libPaths( c( .libPaths(), "D:/R-3.4.3/library/file31dc4033381b/dplyr") )
library('dplyr')
#data <- read.csv("data/intro-survey.csv",  fileEncoding="UTF-8-BOM")
# count total number of each answers
programming.experience <- group_by(data, programming_exp) %>%
summarize (
responses = n()
)
# convert the options number into related answers for programming experience
programming.experience[1:5, "programming_exp"] <- c("never","simple","some experience",
"moderate experience", "lots of experience")
total.program.exp <- sum(programming.experience$responses)
programming.experience <- mutate(programming.experience,
percentages = paste0(round(responses / total.program.exp * 100, digits = 2),"%")
)
# find out numbers of people using different operating system
operating.system <- group_by(data, os) %>%
summarize (
usage = n()
)
operating.system <- operating.system[- 3, ]
operating.system[3, "usage"] = 2
# percentage of different operating system users
total.os <- sum(operating.system$usage)
operating.system <- mutate(operating.system,
percent = paste0(round(usage / total.os * 100, digits = 2),"%")
)
# a function that calculate percentage of each software tool
summary.data <- function(origin) {
origin.sym <- rlang::sym(origin)
group_by(data, !!origin.sym) %>%
summarize(
n = n()
) %>%
mutate (percent = paste0(round(n / sum(n) * 100, digits = 2), "%"))
}
# tables of five rsoftware tools
command.line.col <- summary.data('cli_exp')
colnames(command.line.col) <- c('exp','command line', 'command line percent')
version.control.col <- summary.data('vcs_exp')
colnames(version.control.col) <- c('exp','version control', 'version control percent')
markdown.col <- summary.data('md_exp')
colnames(markdown.col) <- c('exp','markdown', 'markdown percent')
r.col <- summary.data('r_exp')
colnames(r.col) <- c('exp','language R', 'language R percent')
web.col <- summary.data('web_exp')
colnames(web.col) <- c('exp','web programming', 'web programming percent')
# combined five table
software.language1 <- left_join(command.line.col, version.control.col)
software.language2 <- left_join(markdown.col, r.col)
software.language <- left_join(software.language1, software.language2)
software.language <- left_join(software.language,web.col)
software.language[1:4, "exp"] <- c("never","a few time","intermediate user",
"expert user")
programming.experience <- group_by(data, programming_exp) %>%
summarize (
responses = n()
)
# .libPaths( c( .libPaths(), "D:/R-3.4.3/library/file31dc4033381b/dplyr") )
library('dplyr')
programming.experience <- group_by(data, programming_exp) %>%
summarize (
responses = n()
)
install.packages("shiny")
library("shiny")
install.packages("rsconnect")
libbrary("rsconnect")
library("rsconnect")
rsconnect::setAccountInfo(name='cocoydt', token='BFFFDBDEDC54E8F1F902C705B8BDAC30', secret='GZqjl3TIyeLKi0jL+p8CZoU7hr3yvwWhW2ZM8R1+')
library("dplyr")
colnames(web.col) <- c('exp','web programming', 'web programming percent')
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
.libPaths()
library("dplyr")
library("ggplot2")
library("ggplot2")
library("dplyr")
library("shiny")
# You will once again be working with the `diamonds` data set provided by ggplot2
# Use dplyr's `sample_n()` function to get a random 3000 rows from the data set
# Store this sample in a variable `diamonds.sample`
diamonds.sample <- sample_n(diamonds,3000)
price.range <- range(diamonds$price)
carat.range <- range(diamonds$carat)
price
price.range
carat.range
runApp('INFO201/ch16-shiny/exercise-3')
runApp('INFO201/ch16-shiny/exercise-3')
runApp('INFO201/ch16-shiny/exercise-3')
runApp('INFO201/ch16-shiny/exercise-3')
install.packages("shiny")
shiny::runApp('INFO201/ch16-shiny/exercise-3')
#install.packages("shiny")
library("shiny")
runApp('INFO201/ch16-shiny/exercise-3')
runApp('INFO201/ch16-shiny/exercise-3')
runApp('INFO201/ch16-shiny/exercise-3')
runApp('INFO201/ch16-shiny/exercise-3')
# Load the Shiny library
library("shiny")
library('maps')
?map
?map_data()
library('ggplot2')
?map_data()
world.map <- map_data('world2')
ggplot(data = world.map) +
geom_polygon(aes(x = long, y = lat, group = group)) +
coord_quickmap()
View(heads(world.map)
）
)
View(world.map)
?iso.alpha()
iso <- iso.expand('world')
iso <- map_data('iso3166')
iso <- iso.alpha('world')
iso <- iso.alpha('world', n = 3)
iso.alpha('world', n = 3)
?iso.alpha()
iso <- iso.alpha(world.map$region, n = 2)
View(iso)
iso <- data('iso3166')
View(heads(iso))
View(head(iso))
data('iso3166')
View(iso3166)
shiny::runApp('INFO201/a7-data-app-Cocoydt')
shiny::runApp('INFO201/a7-data-app-Cocoydt')
runApp('INFO201/a7-data-app-Cocoydt')
runApp('INFO201/a7-data-app-Cocoydt')
shiny::runApp('INFO201/AD_4-2017-Seattle-911-Data')
setwd("~/INFO201/AD_4-2017-Seattle-911-Data")
runApp()
runApp()
print(district)
call <- read.csv('2017_Seattle_911.csv', stringsAsFactor = FALSE)
call <- read.csv('2017_Seattle_911.csv', stringsAsFactor = FALSE)
setwd("~/INFO201/AD_4-2017-Seattle-911-Data")
call <- read.csv('2017_Seattle_911.csv', stringsAsFactor = FALSE)
call <- read.csv('2017_Seattle_911.csv', stringsAsFactor = FALSE)
View(call)
district <- distinct(call, District.Sector) %>%
mutate(name = c('King','George','Edward','David','Charlie','William','Nora','Queen',
'Frank','Mary','Sam','Robert','Ocean','Boy','Union','John','Lincoln'))
call <- read.csv('2017_Seattle_911.csv', stringsAsFactor = FALSE)
district <- distinct(call, District.Sector) %>%
mutate(name = c('King','George','Edward','David','Charlie','William','Nora','Queen',
'Frank','Mary','Sam','Robert','Ocean','Boy','Union','John','Lincoln','','',''))
View(district)
district <- distinct(call, District.Sector)
district <- district[-19, ]
district <- mutate(name = c('King','George','Edward','David','Charlie','William','Nora','Queen',
'Frank','Mary','Sam','Robert','Ocean','Boy','Union','John','Lincoln','99','H'))
district <- distinct(call, District.Sector)
district <- district[-19, ]
district <- mutate(district, name = c('King','George','Edward','David','Charlie','William','Nora','Queen',
'Frank','Mary','Sam','Robert','Ocean','Boy','Union','John','Lincoln','99','H'))
library('dplyr')
district <- distinct(call, District.Sector)
district <- district[-19, ]
district <- mutate(district, name = c('King','George','Edward','David','Charlie','William','Nora','Queen',
'Frank','Mary','Sam','Robert','Ocean','Boy','Union','John','Lincoln','99','H'))
district <- distinct(call, District.Sector)
district <- district[-19, ]
district <- mutate(district, name = c('King','George','Edward','David','Charlie','William','Nora','Queen',
'Frank','Mary','Sam','Robert','Ocean','Boy','Union','John','Lincoln','99','H'))
district <- distinct(call, District.Sector)
district <- district[-19, ]
district <- distinct(call, District.Sector)
View(district)
district <- na.omit(district)
View(district)
district <- distinct(call, District.Sector)
district <- district[-19, ]
district <- mutate(district, name = c('King','George','Edward','David','Charlie','William','Nora','Queen',
'Frank','Mary','Sam','Robert','Ocean','Boy','Union','John','Lincoln','99','H'))
district <- distinct(call, District.Sector)
district <- district[-19, ]
district <- mutate(district, name = c('King','George','Edward','David','Charlie','William','Nora','Queen',
'Frank','Mary','Sam','Robert','Ocean','Boy','Union','John','Lincoln','99','H'))
district <- distinct(call, District.Sector)
# district <- district[-19, ]
district <- mutate(district, name = c('King','George','Edward','David','Charlie','William','Nora','Queen',
'Frank','Mary','Sam','Robert','Ocean','Boy','Union','John','Lincoln','99','','H'))
View(district)
runApp()
runApp()
runApp()
?selectInput
runApp()
runApp()
district <- distinct(call, District.Sector)
?selectInput
runApp()
runApp()
runApp()
runApp()
setwd("~/INFO201/AD_4-2017-Seattle-911-Data")
runApp()
library('dplyr')
library('shiny')
library('ggplot2')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderImage
runApp()
demo <- filter(call, District.Sector == 'K') %>%
group_by(Event.Clearance.Group) %>%
summarize(frequency = n()) %>%
arrange(-frequency)
selected.demo <- head(demo)
sum = sum(demo$frequency)
top <- mutate(top, percentage = paste0(round(frequency / sum * 100, 2), '%'))
bp<- ggplot(selected.demo, aes(x="", y=frequency, fill = Event.Clearance.Group))+
geom_bar(width = 1) + coord_polar("y", start=0)
print(bp)
?stat_count
bp<- ggplot(selected.demo, aes(x="", y=frequency, fill = Event.Clearance.Group))+
geom_bar(width = 1, stat = 'frequency') + coord_polar("y", start=0)
bp<- ggplot(selected.demo, aes(x="", y=frequency, fill = Event.Clearance.Group))+
geom_bar(width = 1, stat = 'identity') + coord_polar("y", start=0)
print(bp)
bp<- ggplot(selected.demo, aes(x="", y=frequency, fill = Event.Clearance.Group))+
geom_col() + coord_polar("y", start=0)
print(bp)
bp<- ggplot(selected.demo, aes(x="", y=frequency, fill = Event.Clearance.Group))+
geom_bar(width = 1, stat = 'identity') + coord_polar("y", start=0)
View(bp)
bp<- ggplot(selected.demo, aes(x="", y=frequency, fill = Event.Clearance.Group))+
geom_bar(width = 1, stat = 'identity') + coord_polar("y", start=0)
View(bp)
print(bp)
runApp()
runApp()
runApp()
runApp()
